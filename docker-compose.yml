version: '3'

services:
  kms:
    build:
      context: Kurento-Media-Server/
      dockerfile: Dockerfile
    container_name: kms
    network_mode: host

  coturn:
    build:
      context: coturn/
      dockerfile: Dockerfile
    container_name: coturn
    network_mode: host

  mysql:
      image: mysql:5.7
      restart: always
      container_name: northernplanet_mysql
      ports:
        - "3307:3306"
      environment:
        - MYSQL_DATABASE=mysql-northernplanet
        - MYSQL_ROOT_PASSWORD=northernplanet
        - MYSQL_User=qnrWhrgodtjd
        - MYSQL_PASSWORD=qnrWhrgodtjd2021!
        - TZ=Asia/Seoul
      command: 
        - --character-set-server=utf8mb4
        - --collation-server=utf8mb4_unicode_ci
      volumes: 
        - ./mysql-northernplanet/data:/var/lib/mysql
        - ./mysql:/docker-entrypoint-initdb.d

  backend:
    container_name: northernplanet_backend
    image: openjdk:8
    restart: on-failure
    network_mode: host
    volumes:
      - ./backend/northernplanet:/app
      - ./presentation:/presentation
    working_dir: /app
    command: bash -c "./gradlew build && java -jar build/libs/northernplanet-0.0.1-SNAPSHOT.jar"
    depends_on:
      - mysql

  webrtc:
    container_name: northernplanet_webrtc
    image: maven
    restart: on-failure
    network_mode: host
    volumes:
      - /home/ubuntu/.m2:/root/.m2
      - ./backend/webrtc:/app
    working_dir: /app
    command: bash -c "mvn package && java -jar target/WebRtc-0.0.1-SNAPSHOT.jar"

  frontend:
    build:
      context: frontend/
      dockerfile: Dockerfile
    container_name: northernplanet_frontend
    restart: "on-failure"
    network_mode: host
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/app/certbot
    command : "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    
  certbot:
        image: certbot/certbot
        restart: unless-stopped
        container_name: certbot
        volumes: 
            - ./data/certbot/conf:/etc/letsencrypt    #nginx컨테이너에 certbot컨테이너 연결
            - ./data/certbot/www:/app/certbot
        depends_on:
            - frontend
        entrypoint : "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"